{"version":3,"sources":["components/FeedbackBtns.styled.js","components/FeedbackBtns.js","components/Statistics.styled.js","components/Statistics.js","components/Section.js","components/NotificationMessage.js","App.js","index.js"],"names":["Title","styled","h2","List","ul","ListItem","li","Button","button","FeedbackBtns","incrementGood","type","onClick","Text","p","Message","Statistics","data","total","positivePercentage","good","neutral","bad","Section","title","children","NotificationMessage","message","App","state","value","setState","prevState","countTotalFeedback","Object","values","reduce","num","countPositiveFeedbackPercentage","Math","ceil","this","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAEaA,EAAQC,IAAOC,GAAV,kDAILC,EAAOF,IAAOG,GAAV,mEAKJC,EAAWJ,IAAOK,GAAV,kDAIRC,EAASN,IAAOO,OAAV,mR,OC+BJC,EA3CM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACtB,OACE,8BACE,eAACP,EAAD,WACE,cAACE,EAAD,UACE,cAACE,EAAD,CACEI,KAAK,SACLC,QAAS,WACPF,EAAc,SAHlB,oBASF,cAACL,EAAD,UACE,cAACE,EAAD,CACEI,KAAK,SACLC,QAAS,WACPF,EAAc,YAHlB,uBASF,cAACL,EAAD,UACE,cAACE,EAAD,CACEI,KAAK,SACLC,QAAS,WACPF,EAAc,QAHlB,yBCtBGP,GAJQF,IAAOC,GAAV,kDAIED,IAAOG,GAAV,kDAIJS,EAAOZ,IAAOa,EAAV,oEAKJC,EAAUd,IAAOa,EAAV,gHCwBLE,EApCI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzBC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,IAEvB,OACE,8BACE,eAAC,EAAD,WACE,6BACE,eAACT,EAAD,oBAAaO,OAEf,6BACE,eAACP,EAAD,uBAAgBQ,OAElB,6BACE,eAACR,EAAD,mBAAYS,OAEd,6BACE,eAACT,EAAD,qBAAcK,OAEhB,6BACE,eAACL,EAAD,iCAA0BM,EAAmBD,GAA7C,eCLKK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,cAACzB,EAAD,UAAQwB,IACPC,MCDQC,EAJa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,cAACZ,EAAD,UAAUY,KCkFJC,E,4MA7EbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,cAAgB,SAACoB,GACD,SAAVA,GACF,EAAKC,UAAS,SAACC,GACb,MAAO,CACLZ,KAAMY,EAAUZ,KAAO,MAKf,YAAVU,GACF,EAAKC,UAAS,SAACC,GACb,MAAO,CACLX,QAASW,EAAUX,QAAU,MAKrB,QAAVS,GACF,EAAKC,UAAS,SAACC,GACb,MAAO,CACLV,IAAKU,EAAUV,IAAM,O,EAM7BW,mBAAqB,WAGnB,OAFeC,OAAOC,OAAO,EAAKN,OAEpBO,QAAO,SAAClB,EAAOmB,GAE3B,OADAnB,GAASmB,IAER,I,EAGLC,gCAAkC,SAACpB,GACjC,OAAc,IAAVA,EACK,EAEFqB,KAAKC,KAAM,EAAKX,MAAMT,KAAOF,EAAS,M,4CAG/C,WACE,IACER,EAIE+B,KAJF/B,cACAmB,EAGEY,KAHFZ,MACAI,EAEEQ,KAFFR,mBACAK,EACEG,KADFH,gCAGII,EAAgBT,IACtB,OACE,qCACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CAAcd,cAAeA,MAEZ,IAAlBgC,EACC,cAAC,EAAD,CAAqBf,QAAQ,sBAE7B,cAAC,EAAD,CAASH,MAAM,aAAf,SACE,cAAC,EAAD,CACEP,KAAMY,EACNX,MAAOwB,EACPvB,mBAAoBmB,a,GAtEhBK,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.d60c0f23.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  margin-left: 40px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-right: 8px;\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  font-weight: 600;\n  color: #000c66;\n  padding: 6px;\n  border-style: dotted;\n  border-radius: 4px;\n  border-width: 1px;\n  &:hover {\n    cursor: pointer;\n    background-color: #b1d4e0;\n    border-color: #b1d4e0;\n  }\n`;\n","import { List, Button, ListItem } from \"components/FeedbackBtns.styled\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackBtns = ({ incrementGood }) => {\n  return (\n    <div>\n      <List>\n        <ListItem>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              incrementGood(\"good\");\n            }}\n          >\n            Good\n          </Button>\n        </ListItem>\n        <ListItem>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              incrementGood(\"neutral\");\n            }}\n          >\n            Neutral\n          </Button>\n        </ListItem>\n        <ListItem>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              incrementGood(\"bad\");\n            }}\n          >\n            Bad\n          </Button>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nFeedbackBtns.propTypes = {\n  incrementGood: PropTypes.func,\n};\n\nexport default FeedbackBtns;\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  margin-left: 40px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  color: #000c66;\n`;\n\nexport const Message = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n  margin-left: 40px;\n  margin-top: 50px;\n`;\n","import PropTypes from \"prop-types\";\nimport { List, Text } from \"./Statistics.styled\";\n\nconst Statistics = ({ data, total, positivePercentage }) => {\n  const { good, neutral, bad } = data;\n\n  return (\n    <div>\n      <List>\n        <li>\n          <Text>Good: {good}</Text>\n        </li>\n        <li>\n          <Text>Neutral: {neutral}</Text>\n        </li>\n        <li>\n          <Text>Bad: {bad}</Text>\n        </li>\n        <li>\n          <Text>Total: {total}</Text>\n        </li>\n        <li>\n          <Text>Positive Feedback: {positivePercentage(total)}%</Text>\n        </li>\n      </List>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  data: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n  total: PropTypes.number,\n  positivePercentage: PropTypes.func,\n};\n\nexport default Statistics;\n","import { Title } from \"./FeedbackBtns.styled\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n\nexport default Section;\n","import { Message } from \"./Statistics.styled\";\n\nconst NotificationMessage = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default NotificationMessage;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport FeedbackBtns from \"components/FeedbackBtns\";\nimport Statistics from \"components/Statistics\";\nimport Section from \"./components/Section\";\nimport NotificationMessage from \"components/NotificationMessage\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementGood = (value) => {\n    if (value === \"good\") {\n      this.setState((prevState) => {\n        return {\n          good: prevState.good + 1,\n        };\n      });\n    }\n\n    if (value === \"neutral\") {\n      this.setState((prevState) => {\n        return {\n          neutral: prevState.neutral + 1,\n        };\n      });\n    }\n\n    if (value === \"bad\") {\n      this.setState((prevState) => {\n        return {\n          bad: prevState.bad + 1,\n        };\n      });\n    }\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n\n    return values.reduce((total, num) => {\n      total += num;\n      return total;\n    }, 0);\n  };\n\n  countPositiveFeedbackPercentage = (total) => {\n    if (total === 0) {\n      return 0;\n    }\n    return Math.ceil((this.state.good / total) * 100);\n  };\n\n  render() {\n    const {\n      incrementGood,\n      state,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n\n    const totalFeedback = countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackBtns incrementGood={incrementGood} />\n        </Section>\n        {totalFeedback === 0 ? (\n          <NotificationMessage message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              data={state}\n              total={totalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}